#!/usr/bin/env php
<?php

/*
 * (C) Copyright 2015 Artem Butusov <art.sormy@gmail.com>.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This application is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 */

/**
 * REDMINE REPO SYNC HELPER
 *
 * Based on ideas: http://www.redmine.org/issues/1273
 */
class Application
{
    private $dsn;
    private $username;
    private $password;

    private $repo;
    private $revision;

    private $verbose;

    public function __construct()
    {
        $this->registerErrorHandler();
    }

    public function registerErrorHandler()
    {
        error_reporting(E_ALL);

        set_error_handler(function ($errno, $errstr, $errfile, $errline) {
            if (error_reporting() & $errno) {
                throw new \ErrorException($errstr, $errno, 0, $errfile, $errline);
            }
        });

        set_exception_handler(function ($e) {
            if ($this->verbose || !isset($this->verbose)) {
                printf("\n");
                fprintf(STDERR, "Uncaught %s\n", $e);
                exit(1);
            } else {
                printf("\n");
                fprintf(STDERR, "ERROR: %s\n", $e->getMessage());
                exit(1);
            }
        });
    }

    public function parseArgs()
    {
        $opts = getopt("d:u:p:n:r:hv");

        $this->verbose = isset($opts["v"]);

        if (isset($opts["h"])) {
            $this->printHelp();
            exit(0);
        }

        $this->dsn = @$opts["d"];
        $this->username = @$opts["u"];
        $this->password = @$opts["p"];

        $this->repo = @$opts["n"];
        $this->revision = @$opts["r"];

        if (empty($this->dsn)
            || empty($this->repo)
            || ($this->revision && !ctype_alnum($this->revision))
        ) {
            $this->printHelp();
            exit(1);
        }
    }

    public function printHelp()
    {
        printf("Redmine repo resync helper (c) Sormy\n");
        printf("Usage: %s <parameters>\n", basename($_SERVER["argv"][0]));
        printf("Parameters:\n");
        printf("  -d <dsn>      Database PDO DSN (required)\n");
        printf("  -u <username> Database username\n");
        printf("  -p <password> Database password\n");
        printf("  -n <repo>     Repo name (required)\n");
        printf("  -r <revision> Repo revision\n");
        printf("  -h            Print this screen\n");
        printf("  -v            Be verbose\n");
    }

    public function run()
    {
        $this->parseArgs();

        $this->pdo = new \PDO($this->dsn, $this->username, $this->password);

        $sql = "delete from changes where changes.changeset_id in (
                    select changesets.id from changesets
                        where changesets.repository_id in (select id from repositories where url like '%/{$this->repo}')
                            " . ($this->revision ? "and changesets.revision >= {$this->revision}" : "") . "
                )";
        if ($this->verbose) {
            printf("SQL: %s\n", $sql);
        }
        $this->pdo->exec($sql);

        $sql = "delete from changesets_issues where changesets_issues.changeset_id in (
                    select changesets.id from changesets
                        where changesets.repository_id in (select id from repositories where url like '%/{$this->repo}')
                            " . ($this->revision ? "and changesets.revision >= {$this->revision}" : "") . "
                )";
        if ($this->verbose) {
            printf("SQL: %s\n", $sql);
        }
        $this->pdo->exec($sql);

        $sql = "delete from changesets where repository_id in (
                    select id from repositories where url like '%/{$this->repo}'
                )" . ($this->revision ? "and changesets.revision >= {$this->revision}" : "");
        if ($this->verbose) {
            printf("SQL: %s\n", $sql);
        }
        $this->pdo->exec($sql);
    }
}

$app = new Application();
$app->run();
